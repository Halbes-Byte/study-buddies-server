<?xml version="1.0" encoding="UTF-8"?>
<!-- Root element for the Maven project -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.studybuddies</groupId>
	<artifactId>server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>server</name>
	<description>Demo project for Spring Boot</description>
	<url/>

	<!-- License section (empty here but can be populated with license info) -->
	<licenses>
		<license/>
	</licenses>

	<!-- Developer info (placeholder, can add actual developer details later) -->
	<developers>
		<developer/>
	</developers>

	<!-- Source control management info (typically Git details go here) -->
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>

	<!-- Define project properties -->
	<properties>
		<!-- Java version used for compilation -->
		<java.version>17</java.version>
	</properties>

	<!-- Dependencies section: Lists all required dependencies for the project -->
	<dependencies>
		<!-- Spring Boot starter for JPA (Java Persistence API for database access) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Spring Boot starter for building web applications -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- PostgreSQL driver for database interaction -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope> <!-- Loaded only during runtime, not compile time -->
		</dependency>

		<!-- Lombok for reducing boilerplate code (e.g., getters, setters) -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.28</version>
			<scope>provided</scope> <!-- Only needed during development, not runtime -->
		</dependency>

		<!-- Spring Boot starter for unit testing (JUnit, etc.) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope> <!-- Only used in testing phase -->
		</dependency>

		<!-- MapStruct for mapping Java objects (DTOs to entities, etc.) -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>1.6.1</version>
		</dependency>

		<!-- Springdoc OpenAPI for API documentation (Swagger integration) -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.5.0</version>
		</dependency>
	</dependencies>

	<!-- Build section: Contains build-specific information such as plugins -->
	<build>
		<plugins>
			<!-- Spring Boot Maven plugin to package the application as a runnable JAR -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Maven Compiler plugin: Used to specify source and target Java versions -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source> <!-- Java source version -->
					<target>1.8</target> <!-- Java target version -->

					<!-- Annotation processors for Lombok and MapStruct -->
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.28</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>1.6.1</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
